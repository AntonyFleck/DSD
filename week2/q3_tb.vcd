$date
	Tue Aug 22 21:38:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module q3_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 1 # k $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module ex $end
$var wire 1 # k $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( yk [3:0] $end
$var wire 4 ) s [3:0] $end
$var wire 1 " cout $end
$var wire 3 * c [3:1] $end
$scope module l0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 # cin $end
$var wire 1 - cout $end
$var wire 1 . s $end
$upscope $end
$scope module l1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 1 cin $end
$var wire 1 2 cout $end
$var wire 1 3 s $end
$upscope $end
$scope module l2 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 cin $end
$var wire 1 7 cout $end
$var wire 1 8 s $end
$upscope $end
$scope module l3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 " cout $end
$var wire 1 < s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1<
0;
0:
19
08
07
06
05
04
13
02
11
00
0/
0.
1-
1,
1+
b1 *
b1010 )
b1 (
b1 '
b1001 &
b1 %
b1001 $
0#
0"
b1010 !
$end
#40
18
16
b1100 !
b1100 )
03
b11 *
12
1/
b1011 $
b1011 &
#60
0"
1<
06
0;
02
07
13
18
01
b0 *
0-
0,
15
b1110 !
b1110 )
0.
b100 (
0+
b100 %
b100 '
b1010 $
b1010 &
#80
