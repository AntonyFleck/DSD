$date
	Mon Aug 14 21:00:11 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsub_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module h1 $end
$var wire 1 # cin $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [3:1] $end
$var wire 4 * b [3:0] $end
$scope module St1 $end
$var wire 1 # cin $end
$var wire 1 + cout $end
$var wire 1 , s $end
$var wire 1 - x $end
$var wire 1 . y $end
$upscope $end
$scope module St2 $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module St3 $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module St4 $end
$var wire 1 9 cin $end
$var wire 1 " cout $end
$var wire 1 : s $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
1:
19
18
07
06
15
14
03
12
01
10
1/
1.
1-
0,
1+
b101 *
b111 )
b1000 (
b101 '
b11 &
b101 %
b11 $
0#
0"
b1000 !
$end
#20
11
06
1:
1"
0.
13
08
1<
b1010 *
b1010 !
b1010 (
0,
17
1;
1#
b1111 $
b1111 &
#40
0"
1,
01
19
1.
03
18
0<
06
b111 )
15
b1001 !
b1001 (
1:
b101 *
07
0;
b1010 %
b1010 '
b11 $
b11 &
#60
1:
19
15
06
14
01
b111 )
10
13
b111 *
b1000 !
b1000 (
0,
02
0#
b111 %
b111 '
b1 $
b1 &
#80
04
09
00
b1 )
05
0"
11
06
1:
0.
03
08
1<
b1000 *
b1010 !
b1010 (
0,
1#
#100
19
15
1:
14
0/
01
10
06
1.
13
0<
b110 )
0+
b11 *
b1001 !
b1001 (
1,
0-
12
17
0#
b11 %
b11 '
b110 $
b110 &
#120
1"
0:
1/
0.
03
1<
b111 )
1+
b1000 *
b0 !
b0 (
0,
1-
1#
b111 %
b111 '
b111 $
b111 &
#140
